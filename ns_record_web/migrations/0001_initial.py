# Generated by Django 2.0.4 on 2019-04-02 03:17

from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AdjuvantTherapy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rtx', models.SmallIntegerField(blank=True, db_column='RTx', null=True)),
                ('rtstart', models.DateTimeField(blank=True, db_column='RTstart', null=True)),
                ('rtend', models.DateTimeField(blank=True, db_column='RTend', null=True)),
                ('rtxdose', models.CharField(blank=True, db_column='RTxdose', max_length=50, null=True)),
                ('rtxrema', models.TextField(blank=True, db_column='Rtxrema', null=True)),
                ('rtcx', models.CharField(blank=True, db_column='RTcx', max_length=50, null=True)),
                ('rs', models.SmallIntegerField(blank=True, db_column='RS', null=True)),
                ('rsdate', models.DateTimeField(blank=True, db_column='RSdate', null=True)),
                ('rsmax', models.CharField(blank=True, db_column='RSmax', max_length=50, null=True)),
                ('rsmar', models.IntegerField(blank=True, db_column='RSmar', null=True)),
                ('rsrema', models.CharField(blank=True, db_column='RSrema', max_length=50, null=True)),
                ('othertx', models.SmallIntegerField(blank=True, db_column='Othertx', null=True)),
                ('othtxtyp', models.CharField(blank=True, db_column='Othtxtyp', max_length=50, null=True)),
                ('othtxday', models.DateTimeField(blank=True, db_column='Othtxday', null=True)),
                ('othtxtm', models.TextField(blank=True, db_column='Othtxtm', null=True)),
                ('othtxre', models.TextField(blank=True, db_column='Othtxre', null=True)),
                ('othtxcx', models.CharField(blank=True, db_column='Othtxcx', max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('extra_comment', models.TextField(blank=True, null=True, verbose_name='Extra Comment')),
                ('check', models.IntegerField(choices=[(1, 'None'), (2, 'Exist'), (3, 'Non-Exist')], default='1', verbose_name='History')),
                ('confirm', models.BooleanField(default=False, verbose_name='Confirm')),
                ('resultno', models.IntegerField(blank=True, null=True)),
                ('date', models.DateField(blank=True, max_length=255, null=True, verbose_name='Date')),
                ('gcs_eye', models.CharField(blank=True, choices=[('1', '1-No Response'), ('2', '2-To Pain'), ('3', '3-To Verbal Command'), ('4', '4-Spontaneously'), ('S', 'S-Untestable (Swollen)')], max_length=255, null=True, verbose_name='GCS Eyes Opening')),
                ('gcs_verbal', models.CharField(blank=True, choices=[('1', '1-No Response'), ('2', '2-Incomprehensible Sounds'), ('3', '3-Inappropriate Words'), ('4', '4-Disoriented & Converses'), ('5', '5-Oriented & Converses'), ('T', 'T-Untestable (Artificial Airway)')], max_length=255, null=True, verbose_name='GCS Best Verbal Response')),
                ('gcs_motor', models.CharField(blank=True, choices=[('1', '1-No Response'), ('2', '2-Extension'), ('3', '3-Flexion Abnormal'), ('4', '4-Flexion Withdrawal'), ('5', '5-Localizes to Pain'), ('6', '6-Obeys Commands'), ('P', 'P-Untestable (Paralyzed)')], max_length=255, null=True, verbose_name='GCS Motor')),
                ('gcs_total', models.CharField(blank=True, max_length=255, null=True, verbose_name='GCS Total')),
                ('gcs_sum', models.CharField(blank=True, max_length=255, null=True, verbose_name='GCS Sum')),
                ('mmse', models.CharField(blank=True, max_length=255, null=True, verbose_name='MMSE')),
                ('gose', models.CharField(blank=True, choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8')], max_length=255, null=True, verbose_name='GOSE')),
                ('bathel', models.CharField(blank=True, max_length=255, null=True, verbose_name='Bathel Index')),
                ('drs', models.CharField(blank=True, max_length=255, null=True, verbose_name='DRS')),
                ('mrs', models.CharField(blank=True, choices=[('0', '0'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6')], max_length=255, null=True, verbose_name='MRS')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Chemotherapy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ctx', models.SmallIntegerField(blank=True, db_column='CTx', null=True)),
                ('ctxregi', models.CharField(blank=True, db_column='CTxregi', max_length=50, null=True)),
                ('ctxno', models.CharField(blank=True, db_column='CTxno', max_length=50, null=True)),
                ('ctxday', models.DateTimeField(blank=True, db_column='CTxday', null=True)),
                ('ctxtm', models.DateTimeField(blank=True, db_column='CTxtm', null=True)),
                ('ctx1rema', models.TextField(blank=True, db_column='CTxrema', null=True)),
                ('therapy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ns_record_web.AdjuvantTherapy', verbose_name='Adjuvant Therapy ID')),
            ],
        ),
        migrations.CreateModel(
            name='Combine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('extra_comment', models.TextField(blank=True, null=True, verbose_name='Extra Comment')),
                ('check', models.IntegerField(choices=[(1, 'None'), (2, 'Exist'), (3, 'Non-Exist')], default='1', verbose_name='History')),
                ('confirm', models.BooleanField(default=False, verbose_name='Confirm')),
                ('other_major_operation', models.CharField(blank=True, max_length=255, null=True, verbose_name='Other Major Operation')),
                ('other_major_operation_detail', models.TextField(blank=True, null=True, verbose_name='Other Major Operation Detail')),
                ('other_major_office', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('None', 'None'), ('OS', 'OS'), ('TS', 'TS'), ('PS', 'PS'), ('ENT', 'ENT'), ('OPTH', 'OPTH'), ('CS', 'CS'), ('OMS', 'OMS'), ('URO', 'URO'), ('NS', 'NS'), ('Other', 'Other')], max_length=255, null=True, verbose_name='Other Major Office')),
                ('non_tbi_surgery_date', models.DateField(blank=True, max_length=255, null=True, verbose_name='Date of Non TBI Surgery')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Diagnosis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('extra_comment', models.TextField(blank=True, null=True, verbose_name='Extra Comment')),
                ('check', models.IntegerField(choices=[(1, 'None'), (2, 'Exist'), (3, 'Non-Exist')], default='1', verbose_name='History')),
                ('confirm', models.BooleanField(default=False, verbose_name='Confirm')),
                ('diagnosis', models.TextField(blank=True, null=True, verbose_name='Diagnosis')),
                ('primary_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='Primary diagnosis Code')),
                ('primary_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Primary diagnosis Name')),
                ('skull', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('None', 'None'), ('Linear Fx', 'Linear Fx'), ('Depressed Fx', 'Depressed Fx'), ('Basal Skull fracture', 'Basal Skull fracture'), ('Diastic Fx', 'Diastic Fx'), ('Frontal sinus Fx', 'Frontal sinus Fx'), ('Temporal bone fracture', 'Temporal bone fracture'), ('FCCD', 'FCCD'), ('Pneumocephalus', 'Pneumocephalus'), ('CSF leakage', 'CSF leakage')], max_length=255, null=True, verbose_name='Skull Injury')),
                ('injury_position', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('None', 'None'), ('Right', 'Right'), ('Left', 'Left'), ('Bilateral', 'Bilateral')], max_length=255, null=True, verbose_name='Injury Position')),
                ('position', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('None', 'None'), ('Frontal', 'Frontal'), ('Temporal', 'Temporal'), ('Parietal', 'Parietal'), ('Occipital', 'Occipital'), ('Cerebellum', 'Cerebellum'), ('Other', 'Other')], max_length=255, null=True, verbose_name='Position')),
                ('position_detail', models.TextField(blank=True, null=True, verbose_name='Position Detail')),
                ('hemorrhage', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('None', 'None'), ('SDH', 'SDH'), ('EDH', 'EDH'), ('ICH', 'ICH'), ('Contusion', 'Contusion')], max_length=255, null=True, verbose_name='Hemorrhage Injury')),
                ('hemorrhage_injury_position', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('None', 'None'), ('Right', 'Right'), ('Left', 'Left'), ('Bilateral', 'Bilateral')], max_length=255, null=True, verbose_name='Injury Position')),
                ('hemorrhage_position', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('None', 'None'), ('Frontal', 'Frontal'), ('Temporal', 'Temporal'), ('Parietal', 'Parietal'), ('Occipital', 'Occipital'), ('Cerebellum', 'Cerebellum'), ('Other', 'Other')], max_length=255, null=True, verbose_name='Hemorrhage Position')),
                ('hemorrhage_position_detail', models.TextField(blank=True, null=True, verbose_name='Hemorrhage Position Detail')),
                ('diffuse', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('None', 'None'), ('SAH', 'SAH'), ('IVH', 'IVH'), ('DAI', 'DAI')], max_length=255, null=True, verbose_name='Diffuse Injury')),
                ('vascular', models.CharField(blank=True, choices=[('Absent', 'Absent'), ('Exist', 'Exist')], max_length=255, null=True, verbose_name='Vascular Injury')),
                ('vascular_detail', models.TextField(blank=True, null=True, verbose_name='Vascular Injury Detail')),
                ('penetrating', models.CharField(blank=True, choices=[('Absent', 'Absent'), ('Penetrating Only', 'Penetrating Only'), ('Foreign body', 'Foreign body')], max_length=255, null=True, verbose_name='Penetrating')),
                ('penetrating_detail', models.TextField(blank=True, null=True, verbose_name='Penetrating Detail')),
                ('fore', models.CharField(blank=True, choices=[('Absent', 'Absent'), ('Penetrating Only', 'Penetrating Only')], max_length=255, null=True, verbose_name='Foreign body')),
                ('fore_detail', models.TextField(blank=True, null=True, verbose_name='Foreign Body Detail')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Followup',
            fields=[
                ('fuid', models.CharField(db_column='FUid', max_length=50, primary_key=True, serialize=False)),
                ('idno', models.CharField(db_column='Idno', max_length=50)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('cfuday', models.DateTimeField(blank=True, db_column='CFUday', null=True)),
                ('cfucli', models.TextField(blank=True, db_column='CFUcli', null=True)),
                ('cfukps', models.SmallIntegerField(blank=True, db_column='CFUKPS', null=True)),
                ('cfuqol', models.SmallIntegerField(blank=True, db_column='CFUQOL', null=True)),
                ('rfuday', models.DateTimeField(blank=True, db_column='RFUday', null=True)),
                ('rfutyp', models.SmallIntegerField(blank=True, db_column='RFUtyp', null=True)),
                ('rfures', models.SmallIntegerField(blank=True, db_column='RFUres', null=True)),
                ('rfurad', models.TextField(blank=True, db_column='RFUrad', null=True)),
            ],
            options={
                'db_table': 'Followup',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='GCS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('extra_comment', models.TextField(blank=True, null=True, verbose_name='Extra Comment')),
                ('check', models.IntegerField(choices=[(1, 'None'), (2, 'Exist'), (3, 'Non-Exist')], default='1', verbose_name='History')),
                ('confirm', models.BooleanField(default=False, verbose_name='Confirm')),
                ('arr_date', models.DateTimeField(blank=True, null=True, verbose_name='Date & Time of GCS')),
                ('arr_status', models.CharField(blank=True, choices=[('Alert', 'Alert'), ('Drowsy', 'Drowsy'), ('Stupor', 'Stupor'), ('Semicoma', 'Semicoma'), ('Coma', 'Coma')], max_length=255, null=True, verbose_name='Arrival Mental Status')),
                ('arr_sbp', models.CharField(blank=True, max_length=255, null=True, verbose_name='Arrival SBP')),
                ('arr_dbp', models.CharField(blank=True, max_length=255, null=True, verbose_name='Arrival DBP')),
                ('arr_hr', models.CharField(blank=True, max_length=255, null=True, verbose_name='Arrival HR')),
                ('arr_rr', models.CharField(blank=True, max_length=255, null=True, verbose_name='Arrival RR(회/min)')),
                ('arr_eye', models.CharField(blank=True, choices=[('1', '1-No Response'), ('2', '2-To Pain'), ('3', '3-To Verbal Command'), ('4', '4-Spontaneously'), ('S', 'S-Untestable (Swollen)')], max_length=255, null=True, verbose_name='Arrival GCS Eyes Opening')),
                ('arr_verbal', models.CharField(blank=True, choices=[('1', '1-No Response'), ('2', '2-Incomprehensible Sounds'), ('3', '3-Inappropriate Words'), ('4', '4-Disoriented & Converses'), ('5', '5-Oriented & Converses'), ('T', 'T-Untestable (Artificial Airway)')], max_length=255, null=True, verbose_name='Arrival GCS Best Verbal Response')),
                ('arr_motor', models.CharField(blank=True, choices=[('1', '1-No Response'), ('2', '2-Extension'), ('3', '3-Flexion Abnormal'), ('4', '4-Flexion Withdrawal'), ('5', '5-Localizes to Pain'), ('6', '6-Obeys Commands'), ('P', 'P-Untestable (Paralyzed)')], max_length=255, null=True, verbose_name='Arrival GCS Motor')),
                ('arr_total', models.CharField(blank=True, max_length=255, null=True, verbose_name='Arrival GCS Total')),
                ('arr_sum', models.CharField(blank=True, max_length=255, null=True, verbose_name='Arrival Sum')),
                ('arr_rts', models.CharField(blank=True, max_length=255, null=True, verbose_name='Arrival RTS')),
                ('arr_rtupper', models.CharField(blank=True, choices=[('0', '0'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('U', 'U')], max_length=255, null=True, verbose_name='Arrival Rt.Upper')),
                ('arr_ltupper', models.CharField(blank=True, choices=[('0', '0'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('U', 'U')], max_length=255, null=True, verbose_name='Arrival Lt.Upper')),
                ('arr_rtlower', models.CharField(blank=True, choices=[('0', '0'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('U', 'U')], max_length=255, null=True, verbose_name='Arrival Rt.Lower')),
                ('arr_ltlower', models.CharField(blank=True, choices=[('0', '0'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('U', 'U')], max_length=255, null=True, verbose_name='Arrival Lt.Lower')),
                ('arr_pp_right', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Untestable', 'Untestable'), ('Unknown', 'Unknown')], max_length=255, null=True, verbose_name='Arrival Pupils Right')),
                ('arr_pp_left', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Untestable', 'Untestable'), ('Unknown', 'Unknown')], max_length=255, null=True, verbose_name='Arrival Pupils Left')),
                ('arr_pp_rtsize', models.CharField(blank=True, choices=[('Unknown', 'Unknown'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8')], max_length=255, null=True, verbose_name='Arrival Pupils Right Size')),
                ('arr_pp_ltsize', models.CharField(blank=True, choices=[('Unknown', 'Unknown'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8')], max_length=255, null=True, verbose_name='Arrival Pupils Left Size')),
                ('arr_pp_rtshape', models.CharField(blank=True, choices=[('Round', 'Round'), ('Oval', 'Oval'), ('Unknown', 'Unknown')], max_length=255, null=True, verbose_name='Arrival Pupils Right Shape')),
                ('arr_pp_ltshape', models.CharField(blank=True, choices=[('Round', 'Round'), ('Oval', 'Oval'), ('Unknown', 'Unknown')], max_length=255, null=True, verbose_name='Arrival Pupils Left Shape')),
                ('arr_pp_rtprompt', models.CharField(blank=True, choices=[('Brisk', 'Brisk'), ('Sluggish', 'Sluggish'), ('Nonreactive', 'Nonreactive'), ('Untestable', 'Untestable'), ('Unknown', 'Unknown')], max_length=255, null=True, verbose_name='Arrival Pupils Right Prompt')),
                ('arr_pp_ltprompt', models.CharField(blank=True, choices=[('Brisk', 'Brisk'), ('Sluggish', 'Sluggish'), ('Nonreactive', 'Nonreactive'), ('Untestable', 'Untestable'), ('Unknown', 'Unknown')], max_length=255, null=True, verbose_name='Arrival Pupils Left Prompt')),
                ('arr_coa_correction', models.CharField(blank=True, choices=[(None, 'Unknown'), ('Yes', 'Yes'), ('No', 'No')], max_length=255, null=True, verbose_name='Arrival Correction of coagulopathy')),
                ('arr_coa_blood', models.CharField(blank=True, choices=[(None, 'Unknown'), ('Yes', 'Yes'), ('No', 'No')], max_length=255, null=True, verbose_name='Arrival Blood Transfusion')),
                ('wor_date', models.DateTimeField(blank=True, max_length=255, null=True, verbose_name='Worst Date & Time of GCS')),
                ('wor_status', models.CharField(blank=True, choices=[('Alert', 'Alert'), ('Drowsy', 'Drowsy'), ('Stupor', 'Stupor'), ('Semicoma', 'Semicoma'), ('Coma', 'Coma')], max_length=255, null=True, verbose_name='Worst Mental Status')),
                ('wor_sbp', models.CharField(blank=True, max_length=255, null=True, verbose_name='Worst SBP')),
                ('wor_dbp', models.CharField(blank=True, max_length=255, null=True, verbose_name='Worst DBP')),
                ('wor_hr', models.CharField(blank=True, max_length=255, null=True, verbose_name='Worst HR')),
                ('wor_rr', models.CharField(blank=True, max_length=255, null=True, verbose_name='Worst RR(회/min)')),
                ('wor_eye', models.CharField(blank=True, choices=[('1', '1-No Response'), ('2', '2-To Pain'), ('3', '3-To Verbal Command'), ('4', '4-Spontaneously'), ('S', 'S-Untestable (Swollen)')], max_length=255, null=True, verbose_name='Worst GCS Eyes Opening')),
                ('wor_verbal', models.CharField(blank=True, choices=[('1', '1-No Response'), ('2', '2-Incomprehensible Sounds'), ('3', '3-Inappropriate Words'), ('4', '4-Disoriented & Converses'), ('5', '5-Oriented & Converses'), ('T', 'T-Untestable (Artificial Airway)')], max_length=255, null=True, verbose_name='Worst GCS Best Verbal Response')),
                ('wor_motor', models.CharField(blank=True, choices=[('1', '1-No Response'), ('2', '2-Extension'), ('3', '3-Flexion Abnormal'), ('4', '4-Flexion Withdrawal'), ('5', '5-Localizes to Pain'), ('6', '6-Obeys Commands'), ('P', 'P-Untestable (Paralyzed)')], max_length=255, null=True, verbose_name='Worst GCS Motor')),
                ('wor_total', models.CharField(blank=True, max_length=255, null=True, verbose_name='Worst GCS Total')),
                ('wor_sum', models.CharField(blank=True, max_length=255, null=True, verbose_name='Worst Sum')),
                ('wor_rts', models.CharField(blank=True, max_length=255, null=True, verbose_name='Worst RTS')),
                ('wor_rtupper', models.CharField(blank=True, choices=[('0', '0'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('U', 'U')], max_length=255, null=True, verbose_name='Worst Rt.Upper')),
                ('wor_ltupper', models.CharField(blank=True, choices=[('0', '0'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('U', 'U')], max_length=255, null=True, verbose_name='Worst Lt.Upper')),
                ('wor_rtlower', models.CharField(blank=True, choices=[('0', '0'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('U', 'U')], max_length=255, null=True, verbose_name='Worst Rt.Lower')),
                ('wor_ltlower', models.CharField(blank=True, choices=[('0', '0'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('U', 'U')], max_length=255, null=True, verbose_name='Worst Lt.Lower')),
                ('wor_pp_right', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Untestable', 'Untestable'), ('Unknown', 'Unknown')], max_length=255, null=True, verbose_name='Worst Pupils Right')),
                ('wor_pp_left', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Untestable', 'Untestable'), ('Unknown', 'Unknown')], max_length=255, null=True, verbose_name='Worst Pupils Left')),
                ('wor_pp_rtsize', models.CharField(blank=True, choices=[('Unknown', 'Unknown'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8')], max_length=255, null=True, verbose_name='Worst Pupils Right Size')),
                ('wor_pp_ltsize', models.CharField(blank=True, choices=[('Unknown', 'Unknown'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8')], max_length=255, null=True, verbose_name='Worst Pupils Left Size')),
                ('wor_pp_rtshape', models.CharField(blank=True, choices=[('Round', 'Round'), ('Oval', 'Oval'), ('Unknown', 'Unknown')], max_length=255, null=True, verbose_name='Worst Pupils Right Shape')),
                ('wor_pp_ltshape', models.CharField(blank=True, choices=[('Round', 'Round'), ('Oval', 'Oval'), ('Unknown', 'Unknown')], max_length=255, null=True, verbose_name='Worst Pupils Left Shape')),
                ('wor_pp_rtprompt', models.CharField(blank=True, choices=[('Brisk', 'Brisk'), ('Sluggish', 'Sluggish'), ('Nonreactive', 'Nonreactive'), ('Untestable', 'Untestable'), ('Unknown', 'Unknown')], max_length=255, null=True, verbose_name='Worst Pupils Right Prompt')),
                ('wor_pp_ltprompt', models.CharField(blank=True, choices=[('Brisk', 'Brisk'), ('Sluggish', 'Sluggish'), ('Nonreactive', 'Nonreactive'), ('Untestable', 'Untestable'), ('Unknown', 'Unknown')], max_length=255, null=True, verbose_name='Worst Pupils Left Prompt')),
                ('wor_coa_correction', models.CharField(blank=True, choices=[(None, 'Unknown'), ('Yes', 'Yes'), ('No', 'No')], max_length=255, null=True, verbose_name='Worst Correction of coagulopathy')),
                ('wor_coa_blood', models.CharField(blank=True, choices=[(None, 'Unknown'), ('Yes', 'Yes'), ('No', 'No')], max_length=255, null=True, verbose_name='Worst Blood Transfusion')),
                ('wounds', models.TextField(blank=True, null=True, verbose_name='External Wounds')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='History',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('extra_comment', models.TextField(blank=True, null=True, verbose_name='Extra Comment')),
                ('check', models.IntegerField(choices=[(1, 'None'), (2, 'Exist'), (3, 'Non-Exist')], default='1', verbose_name='History')),
                ('confirm', models.BooleanField(default=False, verbose_name='Confirm')),
                ('psychiatric', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('No', 'No'), ('Anxirety', 'Anxirety'), ('Depression', 'Depression'), ('Sleep disorder', 'Sleep disorder'), ('Bipolar Disorder', 'Bipolar Disorder'), ('SPR', 'SPR'), ('PTS', 'PTS'), ('Other', 'Other')], max_length=255, null=True, verbose_name='Psychiatric')),
                ('psychiatric_detail', models.TextField(blank=True, null=True, verbose_name='Psychiatric Detail')),
                ('cardiovascular', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('No', 'No'), ('HTN', 'HTN'), ('Arrhythmia', 'Arrhythmia'), ('IHD', 'IHD'), ('MI', 'MI'), ('VHD', 'VHD'), ('CHF', 'CHF'), ('Thromboembolic', 'Thromboembolic'), ('Other', 'Other')], max_length=255, null=True, verbose_name='Cardiovascular')),
                ('cardiovascular_detail', models.TextField(blank=True, null=True, verbose_name='Cardiovascular Detail')),
                ('endocrine', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('No', 'No'), ('Hyperlipidemia', 'Hyperlipidemia'), ('Thyroid disorder', 'Thyroid disorder'), ('DM type 1', 'DM type 1'), ('DM type 2', 'DM type 2'), ('BPH', 'BPH'), ('Hystrectomy', 'Hystrectomy'), ('Other', 'Other')], max_length=255, null=True, verbose_name='Endocrine')),
                ('endocrine_detail', models.TextField(blank=True, null=True, verbose_name='Endocrine Detail')),
                ('spinal', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('No', 'No'), ('SCI', 'SCI'), ('Spinal dz', 'Spinal dz'), ('Other', 'Other')], max_length=255, null=True, verbose_name='Spinal')),
                ('spinal_detail', models.TextField(blank=True, null=True, verbose_name='Spinal Detial')),
                ('neurologic', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('No', 'No'), ('TIA', 'TIA'), ('Sz', 'Sz'), ('Epilepsy', 'Epilepsy'), ('HA-non migrain', 'HA-non migrain'), ('HA-migrain', 'HA-migrain'), ('CVA', 'CVA'), ('Vascular abnormality', 'Vascular abnormality'), ('MS', 'MS'), ('Degeneration', 'Degeneration'), ('Encephlaopathy', 'Encephlaopathy'), ('Brain tumor', 'Brain tumor'), ('Nerve sheath tumor', 'Nerve sheath tumor'), ('Other', 'Other')], max_length=255, null=True, verbose_name='Neurologic')),
                ('neurologic_detail', models.TextField(blank=True, null=True, verbose_name='Neurologic Detail')),
                ('oncologic', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('No', 'No'), ('Leukemia', 'Leukemia'), ('Lymphoma', 'Lymphoma'), ('Myeloma', 'Myeloma'), ('Breast', 'Breast'), ('Oropharyngeal', 'Oropharyngeal'), ('Bone', 'Bone'), ('Thyroid', 'Thyroid'), ('Prostate', 'Prostate'), ('Lung', 'Lung'), ('GI', 'GI'), ('Liver', 'Liver'), ('Pancrease', 'Pancrease'), ('Kidney', 'Kidney'), ('Gonad', 'Gonad'), ('Skin', 'Skin'), ('Other', 'Other')], max_length=255, null=True, verbose_name='Oncologic')),
                ('oncologic_detail', models.TextField(blank=True, null=True, verbose_name='Oncologic Detail')),
                ('gi', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('No', 'No'), ('GERD', 'GERD'), ('GI bleeding', 'GI bleeding'), ('IBS', 'IBS'), ('Diarrhear', 'Diarrhear'), ('GI surguries', 'GI surguries'), ('Appendicitis', 'Appendicitis'), ('Other', 'Other')], max_length=255, null=True, verbose_name='GI')),
                ('gi_detail', models.TextField(blank=True, null=True, verbose_name='GI Detail')),
                ('hepatic', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('No', 'No'), ('Insufficiency', 'Insufficiency'), ('Hepatitis', 'Hepatitis'), ('LC', 'LC'), ('Transplant', 'Transplant'), ('Other', 'Other')], max_length=255, null=True, verbose_name='Hepatic')),
                ('hepatic_detail', models.TextField(blank=True, null=True, verbose_name='')),
                ('hematologic', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('No', 'No'), ('Anemia', 'Anemia'), ('HIV positive', 'HIV positive'), ('Coagulopathy', 'Coagulopathy'), ('Other', 'Other')], max_length=255, null=True, verbose_name='Hematologic')),
                ('hematologic_detail', models.TextField(blank=True, null=True, verbose_name='Hematologic Detail')),
                ('pulmonologic', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('No', 'No'), ('COPD', 'COPD'), ('Asthma', 'Asthma'), ('Pneumonia', 'Pneumonia'), ('Pleural effusion', 'Pleural effusion'), ('TB', 'TB'), ('Emphysema', 'Emphysema'), ('Bronchitis', 'Bronchitis'), ('Respiratory failure', 'Respiratory failure'), ('Sleep apnea', 'Sleep apnea'), ('Pulmonary insufficiency', 'Pulmonary insufficiency'), ('Other', 'Other')], max_length=255, null=True, verbose_name='Pulmonologic')),
                ('pulmonologic_detail', models.TextField(blank=True, null=True, verbose_name='Pulmonologic Detail')),
                ('renal', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('No', 'No'), ('Renal insufficiency', 'Renal insufficiency'), ('UTI', 'UTI'), ('Kidney stone', 'Kidney stone'), ('Mlnfection', 'Mlnfection'), ('KT', 'KT'), ('Other', 'Other')], max_length=255, null=True, verbose_name='Renal')),
                ('renal_detail', models.TextField(blank=True, null=True, verbose_name='Reanl Detail')),
                ('ent', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('No', 'No'), ('Lack of olfaction', 'Lack of olfaction'), ('Tinitus', 'Tinitus'), ('Sinusitis', 'Sinusitis'), ('Vision abnormality', 'Vision abnormality'), ('Hearing deficit', 'Hearing deficit'), ('Throat', 'Throat'), ('Other', 'Other')], max_length=255, null=True, verbose_name='ENT')),
                ('ent_detail', models.TextField(blank=True, null=True, verbose_name='ENT Detail')),
                ('musculoskeletal', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('No', 'No'), ('Arthritis', 'Arthritis'), ('Osteoporosis', 'Osteoporosis'), ('Fibromyalgia', 'Fibromyalgia'), ('Hernia', 'Hernia'), ('Previous Fxe surgeries', 'Previous Fxe surgeries'), ('Low back pain', 'Low back pain'), ('Degenerative joint dz', 'Degenerative joint dz'), ('Other', 'Other')], max_length=255, null=True, verbose_name='Musculoskeletal')),
                ('musculoskeletal_detail', models.TextField(blank=True, null=True, verbose_name='Musculoskeletal Detail')),
                ('developmental', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('No', 'No'), ('Leanign Dz', 'Leanign Dz'), ('ADHD', 'ADHD'), ('ADD', 'ADD'), ('Developmental delay', 'Developmental delay'), ('Dyslexia', 'Dyslexia'), ('Other', 'Other')], max_length=255, null=True, verbose_name='Developmental')),
                ('developmental_detail', models.TextField(blank=True, null=True, verbose_name='Developmental Detail')),
                ('anticoagulants', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('None', 'None'), ('Coumarin derivative (Coumadin, Warfarin)', 'Coumarin derivative (Coumadin, Warfarin)'), ('Heparin', 'Heparin'), ('Low-molecular weight heparin', 'Low-molecular weight heparin'), ('Inhibitor of factor Xa (eg.Rivaroxaban)', 'Inhibitor of factor Xa (eg.Rivaroxaban)'), ('Direct thrombin Inhibitor (eg. dabigatran, argatroban, melagatran)', 'Direct thrombin Inhibitor (eg. dabigatran, argatroban, melagatran)'), ('Antithrombin protein therapeutics (Atryn)', 'Antithrombin protein therapeutics (Atryn)')], max_length=255, null=True, verbose_name='Anticoagulants Detail')),
                ('platelet', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('None', 'None'), ('Aspirin', 'Aspirin'), ('ADP receptor inhibitors', 'ADP receptor inhibitors'), ('Clopidogrel (Plavix)', 'Clopidogrel (Plavix)'), ('Ticlopidine (Ticlid)', 'Ticlopidine (Ticlid)'), ('Parasugrel (Effient)', 'Parasugrel (Effient)'), ('Adenosine re-uptake inhibitor (eg. Persantin, Dipyridamole)', 'Adenosine re-uptake inhibitor (eg. Persantin, Dipyridamole)'), ('Glycoprotein IIB/IIIA inhibitors (eg. Aggrastat)', 'Glycoprotein IIB/IIIA inhibitors (eg. Aggrastat)')], max_length=255, null=True, verbose_name='Platelet aggregation inhibitors')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Injury',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('extra_comment', models.TextField(blank=True, null=True, verbose_name='Extra Comment')),
                ('check', models.IntegerField(choices=[(1, 'None'), (2, 'Exist'), (3, 'Non-Exist')], default='1', verbose_name='History')),
                ('confirm', models.BooleanField(default=False, verbose_name='Confirm')),
                ('head_neck', models.IntegerField(choices=[(0, 'No Injury'), (1, 'Minor'), (2, 'Moderate'), (3, 'Serious'), (4, 'Severe'), (5, 'Critical'), (6, 'Unsurvivable')], default=0, verbose_name='Head, Neck')),
                ('face', models.IntegerField(choices=[(0, 'No Injury'), (1, 'Minor'), (2, 'Moderate'), (3, 'Serious'), (4, 'Severe'), (5, 'Critical'), (6, 'Unsurvivable')], default=0, verbose_name='Face')),
                ('chest', models.IntegerField(choices=[(0, 'No Injury'), (1, 'Minor'), (2, 'Moderate'), (3, 'Serious'), (4, 'Severe'), (5, 'Critical'), (6, 'Unsurvivable')], default=0, verbose_name='Chest')),
                ('abdomen', models.IntegerField(choices=[(0, 'No Injury'), (1, 'Minor'), (2, 'Moderate'), (3, 'Serious'), (4, 'Severe'), (5, 'Critical'), (6, 'Unsurvivable')], default=0, verbose_name='Abdomen')),
                ('extremity', models.IntegerField(choices=[(0, 'No Injury'), (1, 'Minor'), (2, 'Moderate'), (3, 'Serious'), (4, 'Severe'), (5, 'Critical'), (6, 'Unsurvivable')], default=0, verbose_name='Extremity')),
                ('external', models.IntegerField(choices=[(0, 'No Injury'), (1, 'Minor'), (2, 'Moderate'), (3, 'Serious'), (4, 'Severe'), (5, 'Critical'), (6, 'Unsurvivable')], default=0, verbose_name='External')),
                ('iss_score', models.IntegerField(default=0, verbose_name='ISS Score')),
                ('marshall_score', models.CharField(blank=True, choices=[('I', 'I'), ('II', 'II'), ('III', 'III'), ('IV', 'IV'), ('V', 'V'), ('VI', 'VI')], max_length=255, null=True, verbose_name='Marshall Score')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Meningtumor',
            fields=[
                ('idno', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('menino', models.CharField(blank=True, db_column='Menino', max_length=50, null=True)),
                ('mepatho', models.TextField(blank=True, db_column='Mepatho', null=True)),
                ('meihc', models.CharField(blank=True, max_length=50, null=True)),
                ('meimgtm', models.DateTimeField(blank=True, db_column='Meimgtm', null=True)),
                ('mesite', models.SmallIntegerField(blank=True, db_column='Mesite', null=True)),
                ('mecyst', models.SmallIntegerField(blank=True, db_column='Mecyst', null=True)),
                ('mearach', models.SmallIntegerField(blank=True, db_column='Mearach', null=True)),
                ('meedema', models.SmallIntegerField(blank=True, db_column='Meedema', null=True)),
                ('mevessel', models.SmallIntegerField(blank=True, db_column='Mevessel', null=True)),
                ('mesinus', models.SmallIntegerField(blank=True, db_column='Mesinus', null=True)),
                ('meimgre', models.CharField(blank=True, db_column='Meimgre', max_length=100, null=True)),
                ('meop1day', models.DateTimeField(blank=True, db_column='Meop1day', null=True)),
                ('meop1ara', models.SmallIntegerField(blank=True, db_column='Meop1ara', null=True)),
                ('meop1typ', models.SmallIntegerField(blank=True, db_column='Meop1typ', null=True)),
                ('meop2day', models.DateTimeField(blank=True, db_column='Meop2day', null=True)),
                ('meop2ara', models.SmallIntegerField(blank=True, db_column='Meop2ara', null=True)),
                ('meop2typ', models.SmallIntegerField(blank=True, db_column='Meop2typ', null=True)),
            ],
            options={
                'db_table': 'MeningTumor',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Monitor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('extra_comment', models.TextField(blank=True, null=True, verbose_name='Extra Comment')),
                ('check', models.IntegerField(choices=[(1, 'None'), (2, 'Exist'), (3, 'Non-Exist')], default='1', verbose_name='History')),
                ('confirm', models.BooleanField(default=False, verbose_name='Confirm')),
                ('icp_timing', models.CharField(blank=True, choices=[('Init', 'Init'), ('After Operation', 'After Operation'), ('Init + After Operation', 'Init + After Operation')], max_length=255, null=True, verbose_name='Timing of ICP monitoring')),
                ('icp_type', models.CharField(blank=True, choices=[('Parenchymal', 'Parenchymal'), ('Subdural', 'Subdural'), ('EVD', 'EVD')], max_length=255, null=True, verbose_name='Type of ICP monitoring')),
                ('icp_start_date', models.DateField(blank=True, max_length=255, null=True, verbose_name='Start date of ICP monitoring')),
                ('icp_end_date', models.DateField(blank=True, max_length=255, null=True, verbose_name='End date of ICP monitoring')),
                ('icp_location', models.CharField(blank=True, choices=[('Rt Kocher', 'Rt Kocher'), ('Lt Kocher', 'Lt Kocher'), ('Subdural', 'Subdural')], max_length=255, null=True, verbose_name='Location of ICP monitoring')),
                ('icp_reason', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('None', 'None'), ('Monitor/catheter failure', 'Monitor/catheter failure'), ('Patient considered unsalvageable', 'Patient considered unsalvageable'), ('Patient died', 'Patient died'), ('Clinically no longer required', 'Clinically no longer required'), ('Other', 'Other')], max_length=255, null=True, verbose_name='Reason for ICP')),
                ('icp_reason_detail', models.TextField(blank=True, null=True, verbose_name='Reason for ICP Detail')),
                ('evd_timing', models.CharField(blank=True, choices=[('Init', 'Init'), ('After Operation', 'After Operation'), ('Init + After Operation', 'Init + After Operation')], max_length=255, null=True, verbose_name='Timing of EVD')),
                ('evd_start_date', models.DateField(blank=True, max_length=255, null=True, verbose_name='Start date of EVD')),
                ('evd_end_date', models.DateField(blank=True, max_length=255, null=True, verbose_name='End date of EVD')),
                ('evd_location', models.CharField(blank=True, choices=[('Rt Kocher', 'Rt Kocher'), ('Lt Kocher', 'Lt Kocher'), ('Subdural', 'Subdural')], max_length=255, null=True, verbose_name='Location of EVD')),
                ('evd_reason', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('None', 'None'), ('Monitor/catheter failure', 'Monitor/catheter failure'), ('Patient considered unsalvageable', 'Patient considered unsalvageable'), ('Patient died', 'Patient died'), ('Clinically no longer required', 'Clinically no longer required'), ('Other', 'Other')], max_length=255, null=True, verbose_name='Reason for EVD')),
                ('evd_reason_detail', models.TextField(blank=True, null=True, verbose_name='Reason for EVD Detail')),
                ('jb_timing', models.CharField(blank=True, choices=[('Init', 'Init'), ('After Operation', 'After Operation'), ('Init + After Operation', 'Init + After Operation')], max_length=255, null=True, verbose_name='Timing of Jugular bulb')),
                ('jb_start_date', models.DateField(blank=True, max_length=255, null=True, verbose_name='Start date of Jugular bulb')),
                ('jb_end_date', models.DateField(blank=True, max_length=255, null=True, verbose_name='End date of Jugular bulb')),
                ('jb_location', models.CharField(blank=True, choices=[('Right', 'Right'), ('Left', 'Left')], max_length=255, null=True, verbose_name='Location of Jugular bulb')),
                ('jb_reason', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('None', 'None'), ('Monitor/catheter failure', 'Monitor/catheter failure'), ('Patient considered unsalvageable', 'Patient considered unsalvageable'), ('Patient died', 'Patient died'), ('Clinically no longer required', 'Clinically no longer required'), ('Other', 'Other')], max_length=255, null=True, verbose_name='Reason for JB')),
                ('jb_reason_detail', models.TextField(blank=True, null=True, verbose_name='Reason for JB Detail')),
                ('bis_timing', models.CharField(blank=True, choices=[('Init', 'Init'), ('After Operation', 'After Operation'), ('Init + After Operation', 'Init + After Operation')], max_length=255, null=True, verbose_name='Timing of BIS')),
                ('bis_start_date', models.DateField(blank=True, max_length=255, null=True, verbose_name='Start date of BIS')),
                ('bis_end_date', models.DateField(blank=True, max_length=255, null=True, verbose_name='End date of BIS')),
                ('bis_location', models.CharField(blank=True, choices=[('None', 'None'), ('Forhead', 'Forhead')], max_length=255, null=True, verbose_name='Location of BIS')),
                ('bis_reason', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('None', 'None'), ('Monitor/catheter failure', 'Monitor/catheter failure'), ('Patient considered unsalvageable', 'Patient considered unsalvageable'), ('Patient died', 'Patient died'), ('Clinically no longer required', 'Clinically no longer required'), ('Other', 'Other')], max_length=255, null=True, verbose_name='Reason for Bis')),
                ('bis_reason_detail', models.TextField(blank=True, null=True, verbose_name='Reason for Bis Detail')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Netumor',
            fields=[
                ('idno', models.CharField(db_column='Idno', max_length=50, primary_key=True, serialize=False)),
                ('netno', models.IntegerField(blank=True, db_column='Netno', null=True)),
                ('newho', models.SmallIntegerField(blank=True, db_column='NEWHO', null=True)),
                ('nedxchge', models.IntegerField(blank=True, db_column='NEDxchge', null=True)),
                ('nedx1', models.TextField(blank=True, db_column='NEDx1', null=True)),
                ('nedx1day', models.DateTimeField(blank=True, db_column='NEDx1day', null=True)),
                ('neihc1', models.CharField(blank=True, db_column='NEIHC1', max_length=100, null=True)),
                ('nedx2', models.CharField(blank=True, db_column='NEDx2', max_length=50, null=True)),
                ('nedx2day', models.DateTimeField(blank=True, db_column='NEDx2day', null=True)),
                ('neihc2', models.CharField(blank=True, db_column='NEIHC2', max_length=100, null=True)),
                ('nedxrema', models.CharField(blank=True, db_column='NEdxrema', max_length=100, null=True)),
                ('neimgtm', models.DateTimeField(blank=True, db_column='Neimgtm', null=True)),
                ('neimg', models.SmallIntegerField(blank=True, null=True)),
                ('nelocate', models.CharField(blank=True, max_length=100, null=True)),
                ('netype', models.SmallIntegerField(blank=True, null=True)),
                ('neeloqu', models.SmallIntegerField(blank=True, null=True)),
                ('necyst', models.SmallIntegerField(blank=True, null=True)),
                ('nevent', models.SmallIntegerField(blank=True, null=True)),
                ('necrosis', models.SmallIntegerField(blank=True, null=True)),
                ('nenhance', models.SmallIntegerField(blank=True, null=True)),
                ('nedema', models.SmallIntegerField(blank=True, null=True)),
                ('neremark', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'NeTumor',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='NonSurgicalTreatment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('extra_comment', models.TextField(blank=True, null=True, verbose_name='Extra Comment')),
                ('check', models.IntegerField(choices=[(1, 'None'), (2, 'Exist'), (3, 'Non-Exist')], default='1', verbose_name='History')),
                ('confirm', models.BooleanField(default=False, verbose_name='Confirm')),
                ('sedation', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('None', 'None'), ('Entobar', 'Entobar'), ('Pentothal', 'Pentothal'), ('Midazolam + Vecaron', 'Midazolam + Vecaron'), ('Midazolam', 'Midazolam'), ('Other', 'Other')], max_length=255, null=True, verbose_name='Sedation Drug')),
                ('sedation_detail', models.TextField(blank=True, null=True, verbose_name='Sedation Drug Detail')),
                ('hypothermia', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('None', 'None'), ('Thermia Blanket', 'Thermia Blanket'), ('Artic sun', 'Artic sun'), ('Cool gard', 'Cool gard'), ('Other', 'Other')], max_length=255, null=True, verbose_name='Hypothermia')),
                ('hypo_detail', models.TextField(blank=True, null=True, verbose_name='Hypothermia Detail')),
                ('hyperosmolar', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('None', 'None'), ('Mannitol', 'Mannitol'), ('Hypertonic Saline', 'Hypertonic Saline'), ('Other', 'Other')], max_length=255, null=True, verbose_name='Hyperosmolar Detail')),
                ('hyper_detail', models.TextField(blank=True, null=True, verbose_name='Hyperosmolar Detail')),
                ('crrt', models.CharField(blank=True, choices=[(None, 'None'), ('Yes', 'Yes')], max_length=255, null=True, verbose_name='CRRT')),
                ('nogas', models.CharField(blank=True, choices=[(None, 'None'), ('Yes', 'Yes')], max_length=255, null=True, verbose_name='NO Gas')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Others',
            fields=[
                ('idno', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('otherno', models.IntegerField(blank=True, db_column='Otherno', null=True)),
                ('othpatho', models.CharField(blank=True, db_column='Othpatho', max_length=100, null=True)),
                ('ihcfind', models.CharField(blank=True, db_column='Ihcfind', max_length=100, null=True)),
                ('othrema', models.CharField(blank=True, db_column='Othrema', max_length=50, null=True)),
                ('preothtm', models.DateTimeField(blank=True, db_column='PreOthtm', null=True)),
                ('preoth', models.CharField(blank=True, db_column='Preoth', max_length=50, null=True)),
                ('preothre', models.CharField(blank=True, db_column='Preothre', max_length=100, null=True)),
                ('oth1tm', models.DateTimeField(blank=True, db_column='Oth1tm', null=True)),
                ('oth1', models.CharField(blank=True, db_column='Oth1', max_length=50, null=True)),
                ('oth1re', models.CharField(blank=True, db_column='Oth1re', max_length=100, null=True)),
                ('oth2tm', models.DateTimeField(blank=True, db_column='Oth2tm', null=True)),
                ('oth2', models.CharField(blank=True, db_column='Oth2', max_length=50, null=True)),
                ('oth2re', models.CharField(blank=True, db_column='Oth2re', max_length=100, null=True)),
                ('oth3tm', models.DateTimeField(blank=True, db_column='Oth3tm', null=True)),
                ('oth3', models.CharField(blank=True, db_column='Oth3', max_length=50, null=True)),
                ('oth3re', models.CharField(blank=True, db_column='Oth3re', max_length=100, null=True)),
                ('oth4tm', models.DateTimeField(blank=True, db_column='Oth4tm', null=True)),
                ('oth4', models.CharField(blank=True, db_column='Oth4', max_length=50, null=True)),
                ('oth4re', models.CharField(blank=True, db_column='Oth4re', max_length=100, null=True)),
                ('oth5tm', models.DateTimeField(blank=True, db_column='Oth5tm', null=True)),
                ('oth5', models.CharField(blank=True, db_column='Oth5', max_length=50, null=True)),
                ('oth5re', models.CharField(blank=True, db_column='Oth5re', max_length=100, null=True)),
                ('oth6tm', models.DateTimeField(blank=True, db_column='Oth6tm', null=True)),
                ('oth6', models.CharField(blank=True, db_column='Oth6', max_length=50, null=True)),
                ('oth6re', models.CharField(blank=True, db_column='Oth6re', max_length=100, null=True)),
                ('oth7tm', models.DateTimeField(blank=True, db_column='Oth7tm', null=True)),
                ('oth7', models.CharField(blank=True, db_column='Oth7', max_length=50, null=True)),
                ('oth7re', models.CharField(blank=True, db_column='Oth7re', max_length=100, null=True)),
                ('oth8tm', models.DateTimeField(blank=True, db_column='Oth8tm', null=True)),
                ('oth8', models.CharField(blank=True, db_column='Oth8', max_length=50, null=True)),
                ('oth8re', models.CharField(blank=True, db_column='Oth8re', max_length=100, null=True)),
                ('oth9tm', models.DateTimeField(blank=True, db_column='Oth9tm', null=True)),
                ('oth9', models.CharField(blank=True, db_column='Oth9', max_length=50, null=True)),
                ('oth9re', models.CharField(blank=True, db_column='Oth9re', max_length=100, null=True)),
                ('oth10tm', models.DateTimeField(blank=True, db_column='Oth10tm', null=True)),
                ('oth10', models.CharField(blank=True, db_column='Oth10', max_length=50, null=True)),
                ('oth10re', models.CharField(blank=True, db_column='Oth10re', max_length=50, null=True)),
            ],
            options={
                'db_table': 'Others',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Overall',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(blank=True, db_column='Year', max_length=20, null=True)),
                ('ajbtno', models.CharField(blank=True, db_column='AJBTno', max_length=10, null=True)),
                ('doctor', models.CharField(blank=True, choices=[('1', '김세혁'), ('2', '노태훈'), ('3', 'others')], db_column='Doctor', max_length=10, null=True)),
                ('surgery', models.CharField(blank=True, choices=[('1', 'Operated case'), ('2', 'Non-Operated')], db_column='Sergery', max_length=10, null=True)),
                ('sergno', models.IntegerField(blank=True, db_column='Sergno', null=True)),
                ('idno', models.CharField(db_column='Idno', max_length=50)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=20, null=True)),
                ('sex', models.CharField(blank=True, choices=[('1', 'Female'), ('2', 'Male')], db_column='Sex', max_length=10, null=True)),
                ('regage', models.CharField(blank=True, db_column='regAge', max_length=15, null=True)),
                ('birthday', models.DateTimeField(blank=True, db_column='Birthday', null=True)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=50, null=True)),
                ('phone1', models.CharField(blank=True, db_column='Phone1', max_length=50, null=True)),
                ('phone2', models.CharField(blank=True, db_column='Phone2', max_length=50, null=True)),
                ('ptype', models.SmallIntegerField(blank=True, choices=[(1, 'new visitor'), (2, 'transferred from other hospital after treatment')], db_column='Ptype', null=True)),
                ('distype', models.SmallIntegerField(blank=True, choices=[(1, 'newly diagnosed'), (2, 'remnant'), (3, 'recurrent')], null=True)),
                ('axis', models.SmallIntegerField(blank=True, choices=[(1, 'extraaxial'), (2, 'intraaxial')], db_column='Axis', null=True)),
                ('tent', models.SmallIntegerField(blank=True, choices=[(1, 'supratentorial'), (2, 'infratentorial'), (3, 'both')], db_column='Tent', null=True)),
                ('class_field', models.CharField(blank=True, choices=[('1', 'Neuroepithelial tumors'), ('2', 'Sellar region tumors'), ('3', 'meningiomas'), ('4', 'Schwannomas'), ('5', 'others')], db_column='class', max_length=30, null=True)),
                ('cc', models.CharField(blank=True, choices=[('1', 'mass effect'), ('2', 'seizure'), ('3', 'focal deficit'), ('4', 'others')], db_column='CC', max_length=50, null=True)),
                ('symptoms', models.TextField(blank=True, db_column='Symptoms', null=True)),
                ('neusign', models.CharField(blank=True, choices=[('1', 'IICP'), ('2', 'mental change'), ('3', 'cranial nerve palsy'), ('4', 'motor weakness'), ('5', 'cerebellar sign'), ('6', 'others'), ('7', 'mixed')], db_column='Neusign', max_length=20, null=True)),
                ('signs', models.TextField(blank=True, db_column='Signs', null=True)),
                ('mental', models.IntegerField(blank=True, choices=[(1, 'alert'), (2, 'confusion'), (3, 'lethargic'), (4, 'drowsy'), (5, 'stupor or worse')], db_column='Mental', null=True)),
                ('kps', models.IntegerField(blank=True, choices=[(100, '정상'), (90, '정상, minor Sx'), (80, '힘들지만 정상 생활 가능'), (70, 'self care 가능'), (60, '때때로 assist 요함'), (50, '자주 돌보아 주어야 함'), (40, '불구'), (30, '장해가 심한 불구'), (20, '매우 위중함'), (10, '사망 직전')], db_column='KPS', null=True)),
                ('csremark', models.TextField(blank=True, db_column='Csremark', null=True)),
                ('qolscore', models.CharField(blank=True, db_column='QOLscore', max_length=50, null=True)),
                ('pfhx', models.TextField(blank=True, db_column='PFHx', null=True)),
                ('ictday', models.DateTimeField(blank=True, db_column='iCTday', null=True)),
                ('ictlesno', models.SmallIntegerField(blank=True, choices=[(1, 'single'), (2, 'multiple')], db_column='iCTlesno', null=True)),
                ('ictsite', models.SmallIntegerField(blank=True, choices=[(1, 'right'), (2, 'left'), (3, 'both'), (4, 'midline(including brainstem)')], db_column='iCTsite', null=True)),
                ('icthydr', models.SmallIntegerField(blank=True, choices=[(1, 'no'), (2, 'yes')], db_column='iCThydr', null=True)),
                ('icthemo', models.SmallIntegerField(blank=True, choices=[(1, 'no'), (2, 'yes')], db_column='iCThemo', null=True)),
                ('ictcalc', models.SmallIntegerField(blank=True, choices=[(1, 'no'), (2, 'yes')], db_column='iCTcalc', null=True)),
                ('ictsize', models.CharField(blank=True, db_column='iCTsize', max_length=50, null=True)),
                ('ictfind', models.CharField(blank=True, db_column='iCTfind', max_length=100, null=True)),
                ('imrday', models.DateTimeField(blank=True, db_column='iMRday', null=True)),
                ('imrlesno', models.SmallIntegerField(blank=True, db_column='iMRlesno', null=True)),
                ('imrsite', models.SmallIntegerField(blank=True, db_column='iMRsite', null=True)),
                ('imrhydr', models.SmallIntegerField(blank=True, db_column='iMRhydr', null=True)),
                ('imrhemo', models.SmallIntegerField(blank=True, db_column='iMRhemo', null=True)),
                ('imrsize', models.CharField(blank=True, db_column='iMRsize', max_length=50, null=True)),
                ('imrfind', models.CharField(blank=True, db_column='iMRfind', max_length=100, null=True)),
                ('spectday', models.DateTimeField(blank=True, null=True)),
                ('thallium', models.SmallIntegerField(blank=True, choices=[(1, 'no uptake'), (2, 'uptake')], null=True)),
                ('mibi', models.SmallIntegerField(blank=True, choices=[(1, 'no uptake'), (2, 'partial uptake'), (3, 'uptake')], db_column='MIBI', null=True)),
                ('specfind', models.CharField(blank=True, db_column='Specfind', max_length=50, null=True)),
                ('ipetday', models.DateTimeField(blank=True, db_column='iPETday', null=True)),
                ('ipetri', models.IntegerField(blank=True, choices=[(1, '18FDG'), (2, '1methionine'), (3, 'others')], db_column='iPETri', null=True)),
                ('ipet', models.SmallIntegerField(blank=True, choices=[(1, 'no uptake'), (2, 'partial uptake'), (3, 'uptake')], db_column='iPET', null=True)),
                ('ipetfind', models.CharField(blank=True, db_column='iPETfind', max_length=100, null=True)),
                ('angioday', models.DateTimeField(blank=True, db_column='Angioday', null=True)),
                ('angiocom', models.SmallIntegerField(blank=True, choices=[(1, 'no'), (2, 'yes')], db_column='Angiocom', null=True)),
                ('angiofin', models.CharField(blank=True, db_column='Angiofin', max_length=100, null=True)),
                ('othraday', models.DateTimeField(blank=True, db_column='Othraday', null=True)),
                ('othrad', models.CharField(blank=True, db_column='Othrad', max_length=50, null=True)),
            ],
            options={
                'db_table': 'Overall',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('extra_comment', models.TextField(blank=True, null=True, verbose_name='Extra Comment')),
                ('patient_id', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='Patient ID')),
                ('admission_date', models.DateField(verbose_name='Admission Date')),
                ('doctor', models.CharField(choices=[('김세혁', '김세혁'), ('유남규', '유남규'), ('노태훈', '노태훈'), ('박정언', '박정언'), ('안영환', '안영환'), ('윤수한', '윤수한'), ('임용철', '임용철'), ('정경원', '정경원'), ('조진모', '조진모'), ('최미선', '최미선'), ('최현용', '최현용')], max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=255)),
                ('birthday', models.DateField(verbose_name='Date of Birth (DOB)')),
                ('contact', models.CharField(blank=True, max_length=255, verbose_name='Contact Information')),
                ('address', models.CharField(blank=True, max_length=255)),
                ('education', models.CharField(choices=[('Lack of schooling', 'Lack of schooling'), ('Elementary school graduation', 'Elementary school graduation'), ('Middle school graduation', 'Middle school graduation'), ('High school graduation', 'High school graduation'), ('University graduation', 'University graduation'), ('Master more', 'Master more'), ('Other', 'Other')], default='Other', max_length=255, verbose_name='Education Status')),
                ('education_detail', models.TextField(blank=True)),
                ('employment', models.CharField(choices=[('Inoccupation', 'Inoccupation'), ('Office Job', 'Office Job'), ('Specialized Job', 'Specialized Job'), ('Technical Post', 'Technical Post'), ('Driver', 'Driver'), ('Service Industry', 'Service Industry'), ('Student', 'Student'), ('Simple Work', 'Simple Work'), ('Self-employed', 'Self-employed'), ('Farmer Etc.', 'Farmer Etc.'), ('Police Officer', 'Police Officer'), ('Soldier', 'Soldier'), ('Other', 'Other')], default='Other', max_length=255, verbose_name='Employment (Job)')),
                ('employment_detail', models.TextField(blank=True)),
                ('insurance', models.CharField(choices=[('Health insurance', 'Health insurance'), ('Car insurance', 'Car insurance'), ('Workers compensation', 'Workers compensation'), ('Medicaid', 'Medicaid'), ('Other', 'Other')], default='Other', max_length=255)),
                ('insurance_detail', models.TextField(blank=True)),
                ('nationality', models.CharField(choices=[('KOREAN', 'KOREAN'), ('CHINA', 'CHINA'), ('ASIAN', 'ASIAN'), ('EUROPE', 'EUROPE'), ('AMERICA', 'AMERICA'), ('Other', 'Other')], default='Other', max_length=255)),
                ('nationality_detail', models.TextField(blank=True)),
                ('race', models.CharField(choices=[('South Asian (Indian subcontient)', 'South Asian (Indian subcontient)'), ('Far Eastern Asian', 'Far Eastern Asian'), ('Black', 'Black'), ('White', 'White'), ('Middle Eastern', 'Middle Eastern'), ('Hispanic or Latino', 'Hispanic or Latino'), ('Other', 'Other')], default='Other', max_length=255)),
                ('race_detail', models.TextField(blank=True)),
                ('income', models.CharField(choices=[('Unknown', 'Unknown'), ('High 10%(up 4 million won/month)', 'High 10%(up 4 million won/month)'), ('10-30%(3 million won/month)', '10-30%(3 million won/month)'), ('30~70%(2 million won/month)', '30~70%(2 million won/month)'), ('70~90%(1 million won/month)', '70~90%(1 million won/month)'), ('Low 90%(under 1 million won/month)', 'Low 90%(under 1 million won/month)'), ('Other', 'Other')], default='Other', max_length=255)),
                ('income_detail', models.TextField(blank=True)),
                ('marriage', models.CharField(choices=[('Never married', 'Never married'), ('Married', 'Married'), ('Domestic partnership', 'Domestic partnership'), ('Divorced', 'Divorced'), ('Separated', 'Separated'), ('Widowed', 'Widowed'), ('Other', 'Other')], default='Other', max_length=255)),
                ('marriage_detail', models.TextField(blank=True)),
                ('residence', models.CharField(choices=[('Alone', 'Alone'), ('Familty (Child)', 'Familty (Child)'), ('Spouse', 'Spouse'), ('Other', 'Other')], default='Other', max_length=255)),
                ('residence_detail', models.TextField(blank=True)),
                ('handedness', models.CharField(choices=[('Righthanded', 'Righthanded'), ('Lefthanded', 'Lefthanded'), ('Both', 'Both'), ('Unknown', 'Unknown')], default='Unknown', max_length=255)),
                ('religion', models.CharField(choices=[('None', 'None'), ('Catholic', 'Catholic'), ('Christian', 'Christian'), ('Buddhism', 'Buddhism'), ('Other', 'Other')], default='Other', max_length=255)),
                ('religion_detail', models.TextField(blank=True)),
            ],
            options={
                'ordering': ('-admission_date', 'pk'),
            },
        ),
        migrations.CreateModel(
            name='Pittumor',
            fields=[
                ('idno', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('pitno', models.IntegerField(blank=True, null=True)),
                ('endocrin', models.IntegerField(blank=True, db_column='Endocrin', null=True)),
                ('function', models.SmallIntegerField(blank=True, db_column='Function', null=True)),
                ('pitpatho', models.CharField(blank=True, db_column='Pitpatho', max_length=100, null=True)),
                ('seihc', models.CharField(blank=True, max_length=50, null=True)),
                ('pitimgtm', models.DateTimeField(blank=True, null=True)),
                ('hardygr', models.SmallIntegerField(blank=True, null=True)),
                ('hardysta', models.SmallIntegerField(blank=True, db_column='Hardysta', null=True)),
                ('pitcyst', models.SmallIntegerField(blank=True, null=True)),
                ('pithemo', models.SmallIntegerField(blank=True, null=True)),
                ('pitneuro', models.SmallIntegerField(blank=True, null=True)),
                ('pitica', models.SmallIntegerField(blank=True, null=True)),
                ('pitimgre', models.CharField(blank=True, max_length=100, null=True)),
                ('vfpretm', models.DateTimeField(blank=True, db_column='Vfpretm', null=True)),
                ('vapre', models.CharField(blank=True, db_column='Vapre', max_length=50, null=True)),
                ('vfpre', models.SmallIntegerField(blank=True, db_column='Vfpre', null=True)),
                ('vfprema', models.CharField(blank=True, db_column='Vfprema', max_length=100, null=True)),
                ('vf1tm', models.DateTimeField(blank=True, db_column='Vf1tm', null=True)),
                ('va1', models.CharField(blank=True, db_column='Va1', max_length=50, null=True)),
                ('vf1', models.SmallIntegerField(blank=True, db_column='Vf1', null=True)),
                ('vf1rema', models.CharField(blank=True, db_column='Vf1rema', max_length=100, null=True)),
                ('vf2tm', models.DateTimeField(blank=True, db_column='Vf2tm', null=True)),
                ('va2', models.CharField(blank=True, db_column='Va2', max_length=50, null=True)),
                ('vf2', models.SmallIntegerField(blank=True, db_column='Vf2', null=True)),
                ('vf2rema', models.CharField(blank=True, db_column='Vf2rema', max_length=100, null=True)),
                ('vf3tm', models.DateTimeField(blank=True, db_column='Vf3tm', null=True)),
                ('va3', models.CharField(blank=True, db_column='Va3', max_length=50, null=True)),
                ('vf3', models.SmallIntegerField(blank=True, db_column='Vf3', null=True)),
                ('vf3rema', models.CharField(blank=True, db_column='Vf3rema', max_length=100, null=True)),
                ('vf4tm', models.DateTimeField(blank=True, db_column='Vf4tm', null=True)),
                ('va4', models.CharField(blank=True, db_column='Va4', max_length=50, null=True)),
                ('vf4', models.SmallIntegerField(blank=True, db_column='Vf4', null=True)),
                ('vf4rema', models.CharField(blank=True, db_column='Vf4rema', max_length=100, null=True)),
                ('prehormo', models.SmallIntegerField(blank=True, db_column='Prehormo', null=True)),
                ('presedi', models.SmallIntegerField(blank=True, db_column='Presedi', null=True)),
                ('hspretm', models.DateTimeField(blank=True, db_column='Hspretm', null=True)),
                ('hspretyp', models.SmallIntegerField(blank=True, db_column='Hspretyp', null=True)),
                ('hsprfind', models.CharField(blank=True, db_column='Hsprfind', max_length=100, null=True)),
                ('hs1tm', models.DateTimeField(blank=True, db_column='Hs1tm', null=True)),
                ('hs1typ', models.SmallIntegerField(blank=True, db_column='Hs1typ', null=True)),
                ('hs1find', models.CharField(blank=True, db_column='Hs1find', max_length=100, null=True)),
                ('hs2tm', models.DateTimeField(blank=True, db_column='Hs2tm', null=True)),
                ('hs2typ', models.SmallIntegerField(blank=True, db_column='Hs2typ', null=True)),
                ('hs2find', models.CharField(blank=True, db_column='Hs2find', max_length=100, null=True)),
                ('hs3tm', models.DateTimeField(blank=True, db_column='Hs3tm', null=True)),
                ('hs3typ', models.SmallIntegerField(blank=True, db_column='Hs3typ', null=True)),
                ('hs3find', models.CharField(blank=True, db_column='Hs3find', max_length=100, null=True)),
                ('preprltm', models.DateTimeField(blank=True, db_column='Preprltm', null=True)),
                ('preprl', models.CharField(blank=True, db_column='PrePRL', max_length=50, null=True)),
                ('preprlre', models.CharField(blank=True, db_column='prePRLre', max_length=50, null=True)),
                ('prl1tm', models.DateTimeField(blank=True, db_column='PRL1tm', null=True)),
                ('prlfu1', models.CharField(blank=True, db_column='PRLFU1', max_length=50, null=True)),
                ('prlfu1re', models.CharField(blank=True, db_column='PRLFU1re', max_length=50, null=True)),
                ('prl2tm', models.DateTimeField(blank=True, db_column='PRL2tm', null=True)),
                ('prlfu2', models.CharField(blank=True, db_column='PRLFU2', max_length=50, null=True)),
                ('prlfu2re', models.CharField(blank=True, db_column='PRLFU2re', max_length=50, null=True)),
                ('prl3tm', models.DateTimeField(blank=True, db_column='PRL3tm', null=True)),
                ('prlfu3', models.CharField(blank=True, db_column='PRLFU3', max_length=50, null=True)),
                ('prlfu3re', models.CharField(blank=True, db_column='PRLFU3re', max_length=50, null=True)),
                ('prl4tm', models.DateTimeField(blank=True, db_column='PRL4tm', null=True)),
                ('prlfu4', models.CharField(blank=True, db_column='PRLFU4', max_length=50, null=True)),
                ('prlfu4re', models.CharField(blank=True, db_column='PRLFU4re', max_length=50, null=True)),
                ('prl5tm', models.DateTimeField(blank=True, db_column='PRL5tm', null=True)),
                ('prlfu5', models.CharField(blank=True, db_column='PRLFU5', max_length=50, null=True)),
                ('prlfu5re', models.CharField(blank=True, db_column='PRLFU5re', max_length=50, null=True)),
                ('prl6tm', models.DateTimeField(blank=True, db_column='PRL6tm', null=True)),
                ('prlfu6', models.CharField(blank=True, db_column='PRLFU6', max_length=50, null=True)),
                ('prlfu6re', models.CharField(blank=True, db_column='PRLFU6re', max_length=50, null=True)),
                ('prl7tm', models.DateTimeField(blank=True, db_column='PRL7tm', null=True)),
                ('prlfu7', models.CharField(blank=True, db_column='PRLFU7', max_length=50, null=True)),
                ('prlfu7re', models.CharField(blank=True, db_column='PRLFU7re', max_length=50, null=True)),
                ('prl8tm', models.DateTimeField(blank=True, db_column='PRL8tm', null=True)),
                ('prlfu8', models.CharField(blank=True, db_column='PRLFU8', max_length=50, null=True)),
                ('prlfu8re', models.CharField(blank=True, db_column='PRLFU8re', max_length=50, null=True)),
                ('prl9tm', models.DateTimeField(blank=True, db_column='PRL9tm', null=True)),
                ('prlfu9', models.CharField(blank=True, db_column='PRLFU9', max_length=50, null=True)),
                ('prlfu9re', models.CharField(blank=True, db_column='PRLFU9re', max_length=50, null=True)),
                ('preghtm', models.DateTimeField(blank=True, db_column='preGHtm', null=True)),
                ('pregh', models.CharField(blank=True, db_column='preGH', max_length=50, null=True)),
                ('preigf', models.CharField(blank=True, db_column='preIGF', max_length=50, null=True)),
                ('preghre', models.CharField(blank=True, db_column='preGHre', max_length=50, null=True)),
                ('gh1tm', models.DateTimeField(blank=True, db_column='GH1tm', null=True)),
                ('ghfu1', models.CharField(blank=True, db_column='GHFU1', max_length=50, null=True)),
                ('igffu1', models.CharField(blank=True, db_column='IGFFU1', max_length=50, null=True)),
                ('ghfu1re', models.CharField(blank=True, db_column='GHFU1re', max_length=50, null=True)),
                ('gh2tm', models.DateTimeField(blank=True, db_column='GH2tm', null=True)),
                ('ghfu2', models.CharField(blank=True, db_column='GHFU2', max_length=50, null=True)),
                ('igffu2', models.CharField(blank=True, db_column='IGFFU2', max_length=50, null=True)),
                ('ghfu2re', models.CharField(blank=True, db_column='GHFU2re', max_length=50, null=True)),
                ('gh3tm', models.DateTimeField(blank=True, db_column='GH3tm', null=True)),
                ('ghfu3', models.CharField(blank=True, db_column='GHFU3', max_length=50, null=True)),
                ('igffu3', models.CharField(blank=True, db_column='IGFFU3', max_length=50, null=True)),
                ('ghfu3re', models.CharField(blank=True, db_column='GHFU3re', max_length=50, null=True)),
                ('gh4tm', models.DateTimeField(blank=True, db_column='GH4tm', null=True)),
                ('ghfu4', models.CharField(blank=True, db_column='GHFU4', max_length=50, null=True)),
                ('igffu4', models.CharField(blank=True, db_column='IGFFU4', max_length=50, null=True)),
                ('ghfu4re', models.CharField(blank=True, db_column='GHFU4re', max_length=50, null=True)),
                ('gh5tm', models.DateTimeField(blank=True, db_column='GH5tm', null=True)),
                ('ghfu5', models.CharField(blank=True, db_column='GHFU5', max_length=50, null=True)),
                ('igffu5', models.CharField(blank=True, db_column='IGFFU5', max_length=50, null=True)),
                ('ghfu5re', models.CharField(blank=True, db_column='GHFU5re', max_length=50, null=True)),
                ('gh6tm', models.DateTimeField(blank=True, db_column='GH6tm', null=True)),
                ('ghfu6', models.CharField(blank=True, db_column='GHFU6', max_length=50, null=True)),
                ('igffu6', models.CharField(blank=True, db_column='IGFFU6', max_length=50, null=True)),
                ('ghfu6re', models.CharField(blank=True, db_column='GHFU6re', max_length=50, null=True)),
                ('gh7tm', models.DateTimeField(blank=True, db_column='GH7tm', null=True)),
                ('ghfu7', models.CharField(blank=True, db_column='GHFU7', max_length=50, null=True)),
                ('igffu7', models.CharField(blank=True, db_column='IGFFU7', max_length=50, null=True)),
                ('ghfu7re', models.CharField(blank=True, db_column='GHFU7re', max_length=50, null=True)),
                ('gh8tm', models.DateTimeField(blank=True, db_column='GH8tm', null=True)),
                ('ghfu8', models.CharField(blank=True, db_column='GHFU8', max_length=50, null=True)),
                ('igffu8', models.CharField(blank=True, db_column='IGFFU8', max_length=50, null=True)),
                ('ghfu8re', models.CharField(blank=True, db_column='GHFU8re', max_length=50, null=True)),
                ('gh9tm', models.DateTimeField(blank=True, db_column='GH9tm', null=True)),
                ('ghfu9', models.CharField(blank=True, db_column='GHFU9', max_length=50, null=True)),
                ('igffu9', models.CharField(blank=True, db_column='IGFFU9', max_length=50, null=True)),
                ('ghfu9re', models.CharField(blank=True, db_column='GHFU9re', max_length=50, null=True)),
                ('lpithmtm', models.DateTimeField(blank=True, db_column='Lpithmtm', null=True)),
                ('lpith', models.SmallIntegerField(blank=True, db_column='Lpith', null=True)),
                ('lpitrem', models.CharField(blank=True, db_column='Lpitrem', max_length=100, null=True)),
                ('pitmedi', models.SmallIntegerField(blank=True, db_column='Pitmedi', null=True)),
                ('pitdrug', models.CharField(blank=True, db_column='Pitdrug', max_length=50, null=True)),
                ('pitmere', models.CharField(blank=True, db_column='Pitmere', max_length=50, null=True)),
            ],
            options={
                'db_table': 'PitTumor',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Recurrence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recur', models.SmallIntegerField(blank=True, db_column='Recur', null=True)),
                ('recurtm', models.DateTimeField(blank=True, db_column='Recurtm', null=True)),
                ('recurpt', models.CharField(blank=True, db_column='Recurpt', max_length=50, null=True)),
                ('recurre', models.TextField(blank=True, db_column='Recurre', null=True)),
                ('recurtx', models.TextField(blank=True, db_column='Recurtx', null=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ns_record_web.Overall', verbose_name='Patient ID')),
            ],
        ),
        migrations.CreateModel(
            name='Results',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lcfuday', models.DateTimeField(blank=True, db_column='LCFUday', null=True)),
                ('liferesu', models.SmallIntegerField(blank=True, db_column='Liferesu', null=True)),
                ('lcfucli', models.TextField(blank=True, db_column='LCFUcli', null=True)),
                ('lcfukps', models.SmallIntegerField(blank=True, db_column='LCFUKPS', null=True)),
                ('lcfuqol', models.SmallIntegerField(blank=True, db_column='LCFUQOL', null=True)),
                ('outcome', models.SmallIntegerField(blank=True, db_column='Outcome', null=True)),
                ('cod', models.SmallIntegerField(blank=True, db_column='Cod', null=True)),
                ('codrema', models.TextField(blank=True, db_column='Codrema', null=True)),
                ('lrfuday', models.DateTimeField(blank=True, db_column='LRFUday', null=True)),
                ('lrfutyp', models.SmallIntegerField(blank=True, db_column='LRFUtyp', null=True)),
                ('lrfures', models.SmallIntegerField(blank=True, db_column='LRFUres', null=True)),
                ('lesion', models.SmallIntegerField(blank=True, db_column='Lesion', null=True)),
                ('lrfurad', models.TextField(blank=True, db_column='LRFUrad', null=True)),
                ('casesum', models.TextField(blank=True, null=True)),
                ('patient', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='ns_record_web.Overall', verbose_name='Patient ID')),
            ],
        ),
        migrations.CreateModel(
            name='Schtumor',
            fields=[
                ('idno', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('test', models.IntegerField()),
                ('schtno', models.IntegerField(blank=True, null=True)),
                ('schpatho', models.CharField(blank=True, max_length=100, null=True)),
                ('schihc', models.CharField(blank=True, db_column='schIhc', max_length=50, null=True)),
                ('schorig', models.SmallIntegerField(blank=True, db_column='Schorig', null=True)),
                ('schimgtm', models.DateTimeField(blank=True, null=True)),
                ('schsize', models.SmallIntegerField(blank=True, null=True)),
                ('schcyst', models.SmallIntegerField(blank=True, null=True)),
                ('samiityp', models.SmallIntegerField(blank=True, db_column='Samiityp', null=True)),
                ('nsimgre', models.CharField(blank=True, max_length=100, null=True)),
                ('prehear', models.SmallIntegerField(blank=True, db_column='Prehear', null=True)),
                ('preheatm', models.DateTimeField(blank=True, db_column='Preheatm', null=True)),
                ('prehl', models.CharField(blank=True, db_column='Prehl', max_length=50, null=True)),
                ('presds', models.CharField(blank=True, db_column='preSDS', max_length=50, null=True)),
                ('heafu1tm', models.DateTimeField(blank=True, db_column='heaFU1tm', null=True)),
                ('hlfu1', models.IntegerField(blank=True, db_column='hlFU1', null=True)),
                ('sdsfu1', models.CharField(blank=True, db_column='SDSFU1', max_length=50, null=True)),
                ('heafu2tm', models.DateTimeField(blank=True, db_column='heaFU2tm', null=True)),
                ('hlfu2', models.IntegerField(blank=True, db_column='hlFU2', null=True)),
                ('sdsfu2', models.CharField(blank=True, db_column='SDSFU2', max_length=50, null=True)),
                ('heafu3tm', models.DateTimeField(blank=True, db_column='heaFU3tm', null=True)),
                ('hlfu3', models.IntegerField(blank=True, db_column='hlFU3', null=True)),
                ('sdsfu3', models.CharField(blank=True, db_column='SDSFU3', max_length=50, null=True)),
                ('prefactm', models.DateTimeField(blank=True, db_column='Prefactm', null=True)),
                ('prehb', models.SmallIntegerField(blank=True, db_column='preHB', null=True)),
                ('prefacfn', models.CharField(blank=True, max_length=50, null=True)),
                ('facfu1tm', models.DateTimeField(blank=True, db_column='facFU1tm', null=True)),
                ('hbfu1', models.SmallIntegerField(blank=True, db_column='HBFU1', null=True)),
                ('facfnfu1', models.CharField(blank=True, db_column='FacfnFU1', max_length=100, null=True)),
                ('facfu2tm', models.DateTimeField(blank=True, db_column='facFU2tm', null=True)),
                ('hbfu2', models.SmallIntegerField(blank=True, db_column='HBFU2', null=True)),
                ('facfnfu2', models.CharField(blank=True, db_column='FacfnFU2', max_length=100, null=True)),
                ('facfu3tm', models.DateTimeField(blank=True, db_column='facFU3tm', null=True)),
                ('hbfu3', models.SmallIntegerField(blank=True, db_column='HBFU3', null=True)),
                ('facfnfu3', models.CharField(blank=True, db_column='FacfnFU3', max_length=100, null=True)),
            ],
            options={
                'db_table': 'SchTumor',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SubSurgery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('opdate', models.DateTimeField(blank=True, db_column='Opdate', null=True)),
                ('opname', models.TextField(blank=True, db_column='Opname', null=True)),
                ('optype', models.SmallIntegerField(blank=True, db_column='Optype', null=True)),
                ('oprema', models.TextField(blank=True, db_column='Oprema', null=True)),
                ('opresu', models.TextField(blank=True, db_column='Opresu', null=True)),
                ('opcx', models.SmallIntegerField(blank=True, db_column='opCx', null=True)),
                ('cxday', models.DateTimeField(blank=True, db_column='Cxday', null=True)),
                ('cxrema', models.TextField(blank=True, db_column='Cxrema', null=True)),
                ('cxresu', models.SmallIntegerField(blank=True, db_column='Cxresu', null=True)),
                ('cxfinal', models.CharField(blank=True, db_column='Cxfinal', max_length=50, null=True)),
                ('csfday', models.DateTimeField(blank=True, db_column='CSFday', null=True)),
                ('csftype', models.TextField(blank=True, db_column='CSFtype', null=True)),
                ('csfcx', models.SmallIntegerField(blank=True, db_column='CSFcx', null=True)),
                ('csfcxre', models.CharField(blank=True, db_column='CSFcxre', max_length=50, null=True)),
                ('csfresu', models.CharField(blank=True, db_column='CSFresu', max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Surgery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('extra_comment', models.TextField(blank=True, null=True, verbose_name='Extra Comment')),
                ('check', models.IntegerField(choices=[(1, 'None'), (2, 'Exist'), (3, 'Non-Exist')], default='1', verbose_name='History')),
                ('confirm', models.BooleanField(default=False, verbose_name='Confirm')),
                ('surgery_no', models.IntegerField(blank=True, null=True, verbose_name='No of Surgery')),
                ('aim', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('None', 'None'), ('ICP relief', 'ICP relief'), ('Hematoma removal', 'Hematoma removal'), ('Foreign body removal', 'Foreign body removal'), ('Repair of CSF leak', 'Repair of CSF leak'), ('Reconstruction of Skull', 'Reconstruction of Skull'), ('Other', 'Other')], max_length=255, null=True, verbose_name='Aim of Surgery')),
                ('aim_detail', models.TextField(blank=True, null=True, verbose_name='Aim of Surgery Detail')),
                ('typeof', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('None', 'None'), ('Craniotomy', 'Craniotomy'), ('Craniectomy', 'Craniectomy'), ('Lobectomy', 'Lobectomy'), ('Drainage catheter', 'Drainage catheter'), ('Craniopalsty', 'Craniopalsty'), ('Frontal sinus cranialization', 'Frontal sinus cranialization'), ('Other', 'Other')], max_length=255, null=True, verbose_name='Type of Surgery')),
                ('typeof_detail', models.TextField(blank=True, null=True, verbose_name='Type of Surgery Detail')),
                ('direction', models.CharField(blank=True, choices=[('Right', 'Right'), ('Left', 'Left'), ('Bilateral', 'Bilateral'), ('Occpital', 'Occpital'), ('Posterior fossa', 'Posterior fossa')], max_length=255, null=True, verbose_name='Direction of Surgery')),
                ('intraevd', models.CharField(blank=True, choices=[(None, 'None'), ('Done', 'Done')], max_length=255, null=True, verbose_name='Intraoperative EVD')),
                ('intrasono', models.CharField(blank=True, choices=[(None, 'None'), ('Done', 'Done')], max_length=255, null=True, verbose_name='Intraoperative Sonography')),
                ('surgery_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Name of Surgery')),
                ('surgery_result', models.TextField(blank=True, null=True, verbose_name='Result of Surgery')),
                ('orroom_date', models.DateTimeField(blank=True, max_length=255, null=True, verbose_name='Date & time of tranfer to OR room')),
                ('surgery_start_date', models.DateTimeField(blank=True, max_length=255, null=True, verbose_name='Start time of Surgery')),
                ('surgery_end_date', models.DateTimeField(blank=True, max_length=255, null=True, verbose_name='End time of Surgery')),
                ('blood_loss', models.CharField(blank=True, max_length=255, null=True, verbose_name='Blood loss')),
                ('ffp', models.CharField(blank=True, max_length=255, null=True, verbose_name='Transfusion(FFP)')),
                ('prbc', models.CharField(blank=True, max_length=255, null=True, verbose_name='Transfusion(PRBC)')),
                ('plt', models.CharField(blank=True, max_length=255, null=True, verbose_name='Transfusion(PLT)')),
                ('duroplasty', models.CharField(blank=True, choices=[('None', 'None'), ('Bovie Plenicordium', 'Bovie Plenicordium'), ('Synthetic material', 'Synthetic material'), ('Autologus tissue', 'Autologus tissue'), ('Hemostatic materials', 'Hemostatic materials'), ('Other', 'Other')], max_length=255, null=True, verbose_name='Duroplasty')),
                ('duroplasty_detail', models.TextField(blank=True, null=True, verbose_name='Duroplasty Detail')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ns_record_web.Patient', verbose_name='Patient ID')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Trauma',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('extra_comment', models.TextField(blank=True, null=True, verbose_name='Extra Comment')),
                ('check', models.IntegerField(choices=[(1, 'None'), (2, 'Exist'), (3, 'Non-Exist')], default='1', verbose_name='History')),
                ('confirm', models.BooleanField(default=False, verbose_name='Confirm')),
                ('injury_and_arrival_date_range', models.CharField(max_length=127, verbose_name='Date & Time of Injury and Arrival')),
                ('differ', models.CharField(blank=True, max_length=255, verbose_name='Time interval between injury and arrival')),
                ('type_admission', models.CharField(blank=True, choices=[('None', 'None'), ('Direct to ER', 'Direct to ER'), ('Direct to T-bay', 'Direct to T-bay'), ('Transfer to ER', 'Transfer to ER'), ('Transfer to T-bay', 'Transfer to T-bay'), ('OPD', 'OPD'), ('Other', 'Other')], max_length=255, verbose_name='Type of Admission')),
                ('type_admission_detail', models.TextField(blank=True, verbose_name='Type Admission Detail')),
                ('transfer_method', models.CharField(blank=True, choices=[('None', 'None'), ('119 Ambulance', '119 Ambulance'), ('Private Ambulance', 'Private Ambulance'), ('Air Ambulance', 'Air Ambulance'), ('Another Car', 'Another Car'), ('Walk', 'Walk'), ('Other', 'Other')], max_length=255, verbose_name='Transfer Method')),
                ('transfer_method_detail', models.TextField(blank=True, null=True, verbose_name='Transfer Method Detail')),
                ('pre_admission', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('None', 'None'), ('O2', 'O2'), ('Intubation', 'Intubation'), ('C-spine brace', 'C-spine brace'), ('Air way', 'Air way'), ('CPR', 'CPR'), ('Other', 'Other')], max_length=255, verbose_name='Pre-admission treat')),
                ('pre_admission_detail', models.TextField(blank=True, null=True, verbose_name='Pre-admission Detail')),
                ('type_of_injury', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('None', 'None'), ('Closed', 'Closed'), ('Blast', 'Blast'), ('Crush', 'Crush'), ('Penetrating', 'Penetrating'), ('Other', 'Other')], max_length=255, null=True, verbose_name='Type of Injury')),
                ('type_of_injury_detail', models.TextField(blank=True, null=True, verbose_name='Type of Injury Detail')),
                ('place_of_injury', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('None', 'None'), ('Street/Highway', 'Street/Highway'), ('Home', 'Home'), ('Work/School', 'Work/School'), ('Recreational', 'Recreational'), ('Military', 'Military'), ('Unknown', 'Unknown'), ('Other', 'Other')], max_length=255, verbose_name='Place of Injury')),
                ('place_of_injury_detail', models.TextField(blank=True, null=True, verbose_name='Place of Injury Detail')),
                ('drug_intoxication', models.CharField(blank=True, choices=[('None', 'None'), ('Alcohol', 'Alcohol'), ('Sedatives', 'Sedatives'), ('Sleep phils', 'Sleep phils'), ('Other', 'Other')], max_length=255, verbose_name='Drug Intoxication')),
                ('drug_intoxication_detail', models.TextField(blank=True, verbose_name='Drug Intoxication Detail')),
                ('cause_of_injury', models.CharField(blank=True, choices=[('Driver TA', 'Driver TA'), ('Passenger TA', 'Passenger TA'), ('Pedestrian TA', 'Pedestrian TA'), ('Bicycle', 'Bicycle'), ('Motorcycle', 'Motorcycle'), ('Other Vehicle', 'Other Vehicle'), ('Fall from height', 'Fall from height'), ('Slip down', 'Slip down'), ('Sports', 'Sports'), ('Violence', 'Violence'), ('Work related', 'Work related'), ('Other', 'Other')], max_length=255, verbose_name='Cause of Injury')),
                ('cause_of_injury_detail', models.TextField(blank=True, verbose_name='Cause of Injury Detail')),
                ('loc', models.CharField(blank=True, choices=[(None, 'Unknown'), ('No', 'No'), ('Y', 'Yes'), ('Suspected', 'Suspected')], max_length=255, verbose_name='LOC')),
                ('loc_detail', models.CharField(blank=True, max_length=255, null=True, verbose_name='LOC Time(min)')),
                ('patient', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='ns_record_web.Patient', verbose_name='Patient ID')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Treatment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('extra_comment', models.TextField(blank=True, null=True, verbose_name='Extra Comment')),
                ('check', models.IntegerField(choices=[(1, 'None'), (2, 'Exist'), (3, 'Non-Exist')], default='1', verbose_name='History')),
                ('confirm', models.BooleanField(default=False, verbose_name='Confirm')),
                ('neuro', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('No', 'No'), ('Rhinorrhea', 'Rhinorrhea'), ('Otorrhea', 'Otorrhea'), ('Meningitis', 'Meningitis'), ('Seizure', 'Seizure'), ('Ventriculitis', 'Ventriculitis'), ('Stroke', 'Stroke'), ('Neurogenic Shock', 'Neurogenic Shock'), ('Other CSF Leak', 'Other CSF Leak'), ('Other', 'Other')], max_length=255, null=True, verbose_name='Neurological')),
                ('neuro_detail', models.TextField(blank=True, null=True, verbose_name='Neurological Detail')),
                ('cardio', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('No', 'No'), ('Cardiac Arrest', 'Cardiac Arrest'), ('CHF', 'CHF'), ('DVT', 'DVT'), ('Major Arrhythmia', 'Major Arrhythmia'), ('MI', 'MI'), ('Hypertension Requiring Treatment', 'Hypertension Requiring Treatment'), ('Hypotension Requiring Treatment', 'Hypotension Requiring Treatment'), ('Other', 'Other')], max_length=255, null=True, verbose_name='Cardiovascular')),
                ('cardio_detail', models.TextField(blank=True, null=True, verbose_name='Cardiovascular Detail')),
                ('hematopoetic', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('No', 'No'), ('Coagulopathy', 'Coagulopathy'), ('DIC', 'DIC'), ('Anemia Requiring Treatment', 'Anemia Requiring Treatment'), ('Other', 'Other')], max_length=255, null=True, verbose_name='Hematopoetic')),
                ('hematopoetic_detail', models.TextField(blank=True, null=True, verbose_name='Hematopoetic Detail')),
                ('pulmonary', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('No', 'No'), ('ARDS', 'ARDS'), ('Fat Embolus', 'Fat Embolus'), ('Pulmonary Embolism', 'Pulmonary Embolism'), ('Pleural Effusions', 'Pleural Effusions'), ('Pneumonia', 'Pneumonia'), ('Presumed Pneumonia', 'Presumed Pneumonia'), ('Respiratory Failure', 'Respiratory Failure'), ('VAP', 'VAP'), ('Asthma', 'Asthma'), ('Other', 'Other')], max_length=255, null=True, verbose_name='Pulmonary')),
                ('pulmonary_detail', models.TextField(blank=True, null=True, verbose_name='Pulmonary Detail')),
                ('giab', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('No', 'No'), ('Abdominal Compartment Syndrome', 'Abdominal Compartment Syndrome'), ('Bowel Obstruction', 'Bowel Obstruction'), ('GI Bleed', 'GI Bleed'), ('Hepatic Encephalopathy', 'Hepatic Encephalopathy'), ('Hepatic Failure', 'Hepatic Failure'), ('Pancreatitis', 'Pancreatitis'), ('Renal Failure', 'Renal Failure'), ('Other', 'Other')], max_length=255, null=True, verbose_name='GI/Abdomen')),
                ('giab_detail', models.TextField(blank=True, null=True, verbose_name='GI/Abdomen Detail')),
                ('wound', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('No', 'No'), ('Abcess', 'Abcess'), ('Seroma/hematoma/bleeding', 'Seroma/hematoma/bleeding'), ('Wound Dehiscence', 'Wound Dehiscence'), ('Wound Infection', 'Wound Infection'), ('Pressure Ulcer', 'Pressure Ulcer'), ('Other', 'Other')], max_length=255, null=True, verbose_name='Wound')),
                ('wound_detail', models.TextField(blank=True, null=True, verbose_name='Wound Detail')),
                ('lab', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('No', 'No'), ('Hypoglycemia', 'Hypoglycemia'), ('Hyperglycemia', 'Hyperglycemia'), ('Hyponatremia', 'Hyponatremia'), ('Hypernatremia', 'Hypernatremia'), ('Other', 'Other')], max_length=255, null=True, verbose_name='Lab Abnomarlities')),
                ('lab_detail', models.TextField(blank=True, null=True, verbose_name='Lab Abnomarlities Detail')),
                ('infection', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('No', 'No'), ('Bacteremia', 'Bacteremia'), ('Fever(Temp>38.5) of unknown origin', 'Fever(Temp>38.5) of unknown origin'), ('Presumed Infection', 'Presumed Infection'), ('Sepsis', 'Sepsis'), ('Septicemia', 'Septicemia'), ('UTI', 'UTI'), ('Septic Shock', 'Septic Shock'), ('Other', 'Other')], max_length=255, null=True, verbose_name='Infection other than pneumonia / Wound')),
                ('infection_detail', models.TextField(blank=True, null=True, verbose_name='Infection other than pneumonia / Wound Detail')),
                ('othercomp', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('No', 'No'), ('MSOF', 'MSOF'), ('Transfusion', 'Transfusion')], max_length=255, null=True, verbose_name='Other Complications')),
                ('othercomp_detail', models.TextField(blank=True, null=True, verbose_name='Other Complications Detail')),
                ('comp_comment', models.TextField(blank=True, null=True, verbose_name='Extra comment for complication')),
                ('discharge_type', models.CharField(blank=True, choices=[('Death', 'Death'), ('Home', 'Home'), ('Hopeless', 'Hopeless'), ('Transfer to Hospital', 'Transfer to Hospital'), ('Transfer to other dept', 'Transfer to other dept'), ('Other', 'Other')], max_length=255, null=True, verbose_name='Type of Discharge')),
                ('causedeath', models.CharField(blank=True, choices=[('CNS related', 'CNS related'), ('Bleeding', 'Bleeding'), ('Sepsis/dic', 'Sepsis/dic'), ('Cardiac arrest', 'Cardiac arrest'), ('Respiratory arrest', 'Respiratory arrest'), ('Unknown', 'Unknown')], max_length=255, null=True, verbose_name='Cause of death')),
                ('discharge_date', models.DateField(blank=True, max_length=255, null=True, verbose_name='Date of Discharge')),
                ('patient', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='ns_record_web.Patient', verbose_name='Patient ID')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TumorSurgery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('op', models.SmallIntegerField(blank=True, db_column='Op', null=True)),
                ('oprema', models.CharField(blank=True, db_column='Oprema', max_length=200, null=True)),
                ('specimen', models.CharField(blank=True, db_column='Phone2', max_length=50, null=True)),
                ('csfop', models.SmallIntegerField(blank=True, db_column='CSFop', null=True)),
                ('patient', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='ns_record_web.Overall', verbose_name='Patient ID')),
            ],
        ),
        migrations.AddField(
            model_name='subsurgery',
            name='surgery',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ns_record_web.TumorSurgery', verbose_name='Surgery ID'),
        ),
        migrations.AddField(
            model_name='nonsurgicaltreatment',
            name='patient',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='ns_record_web.Patient', verbose_name='Patient ID'),
        ),
        migrations.AddField(
            model_name='monitor',
            name='patient',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='ns_record_web.Patient', verbose_name='Patient ID'),
        ),
        migrations.AddField(
            model_name='injury',
            name='patient',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='ns_record_web.Patient', verbose_name='Patient ID'),
        ),
        migrations.AddField(
            model_name='history',
            name='patient',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='ns_record_web.Patient', verbose_name='Patient ID'),
        ),
        migrations.AddField(
            model_name='gcs',
            name='patient',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='ns_record_web.Patient', verbose_name='Patient ID'),
        ),
        migrations.AddField(
            model_name='followup',
            name='patient',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='ns_record_web.Overall', verbose_name='Patient ID'),
        ),
        migrations.AddField(
            model_name='diagnosis',
            name='patient',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='ns_record_web.Patient', verbose_name='Patient ID'),
        ),
        migrations.AddField(
            model_name='combine',
            name='patient',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='ns_record_web.Patient', verbose_name='Patient ID'),
        ),
        migrations.AddField(
            model_name='assessment',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ns_record_web.Patient', verbose_name='Patient ID'),
        ),
        migrations.AddField(
            model_name='adjuvanttherapy',
            name='patient',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='ns_record_web.Overall', verbose_name='Patient ID'),
        ),
    ]
